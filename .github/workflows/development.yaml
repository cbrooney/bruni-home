name: development
on:
    pull_request:
        types:
            - created
            - opened
            - edited
            - synchronize
            - reopened
    workflow_call:

jobs:
    build-test-env:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
        steps:
            -   uses: actions/checkout@v3

            -   name: Login to GitHub Container Registry
                uses: docker/login-action@v1
                with:
                    registry: ghcr.io
                    username: ${{ github.actor }}
                    password: ${{ secrets.GITHUB_TOKEN }}

            -   name: build and push env for tests
                run: |
                    docker build . -f docker/php-fpm/build/Dockerfile --build-arg BASE_IMAGE_PHP="php:7.4.30-fpm-buster" --tag ghcr.io/cbrooney/bruni-home-php-fpm:test-env
                    docker push ghcr.io/cbrooney/bruni-home-php-fpm:test-env
    run-tests:
        runs-on: ubuntu-latest
        needs: build-test-env
        permissions:
            contents: read
            packages: write
        steps:
            -   uses: actions/checkout@v3

            -   name: Login to GitHub Container Registry
                uses: docker/login-action@v1
                with:
                    registry: ghcr.io
                    username: ${{ github.actor }}
                    password: ${{ secrets.GITHUB_TOKEN }}

            -   name: run shell script running all tests
                run: |
                    docker-compose -f docker-compose-php-test.yml --env-file .env.test up -d
                    docker-compose -f docker-compose-php-test.yml --env-file .env.test run php-fpm utils/wait-for-it.sh mysql:3306 -t 60
                    docker-compose -f docker-compose-php-test.yml --env-file .env.test run php-fpm composer tests
            -   name: shut down docker containers
                run: |
                    docker-compose -f docker-compose-php-test.yml --env-file .env.test down
#    run-tests:
#        runs-on: ubuntu-latest
#        needs: build
#        strategy:
#            matrix:
#                os: [ubuntu-lastest, windows-2016]
#                node-version: [12.x, 14.x]